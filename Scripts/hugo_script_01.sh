#!/bin/bash

# 2017-09-27 version 0.1
# https://www.marcoscan.com

### Intro
# use this script to create new posts and add pre-existing categories/tags to a post using key-triggered drop-down menus in the Vim editor
# new categories/tags, written by the user in the markdown file header of the post, are automatically added to menus in the next script call

### Instructions
# :! sh ~/path/to/script/directory/hugo_script_01.sh
# then
# use F5 to select a category from the menu
# use F6 to select a tag from the menu

### Code
BPATH=~/path/to/blog/directory
VPATH=~/.vim/plugin

# remove categories and tags lists, will be rebuilt later
rm $BPATH/categories.txt
rm $BPATH/tags.txt

# grep scans all markdown files in the /content/post directory (my default directory for blog posts) and searches for categories/tags in the header
# then creates the lists, sorts them and removes duplicates
# the following two instructions are specific for my blog, can be adapted/removed editing the relative commands
# categories -> first letter uppercase
# sed 's/./\u&/'
# tags -> all lowercase
# tr A-Z a-z

grep -n 'Categories =' $BPATH/content/post/*.md | grep -o '".*"' | sed 's/"//g' | sed 's/./\u&/' | tr , '\n' | sort -u | uniq -u >> $BPATH/categories.txt

grep -n 'Tags =' $BPATH/content/post/*.md | grep -o '".*"' | sed 's/"//g' | tr A-Z a-z | tr , '\n' | sort -u | uniq -u >> $BPATH/tags.txt

# the menus are created by two vimscript files (categories.vim and tags.vim), generated by the following functions in the ~/.vim/plugin directory
# see :help complete( for more info

cat_vim() {
	rm $VPATH/categories.vim
	CATLIST=$(cat $BPATH/categories.txt | sed 's/^\|$/"/g' | sed "s/^\|$/'/g"| paste -sd, -)
	echo "inoremap <F5> <C-R>=ListCategories()<CR>" >> $VPATH/categories.vim
	echo "func! ListCategories()" >> $VPATH/categories.vim
	echo "  call complete(col('.'), [' ',$CATLIST])" >> $VPATH/categories.vim
	echo "  return ''" >> $VPATH/categories.vim
	echo "endfunc" >> $VPATH/categories.vim
}

tag_vim() {
	rm $VPATH/tags.vim
	TAGLIST=$(cat $BPATH/tags.txt | sed 's/^\|$/"/g' | sed "s/^\|$/'/g"| paste -sd, -)
	echo "inoremap <F6> <C-R>=ListTags()<CR>" >> $VPATH/tags.vim
	echo "func! ListTags()" >> $VPATH/tags.vim
	echo "  call complete(col('.'), [' ',$TAGLIST])" >> $VPATH/tags.vim
	echo "  return ''" >> $VPATH/tags.vim
	echo "endfunc" >> $VPATH/tags.vim
}

# when called, the script shows a list of choices

function new_hugo_post_and_update_lists {
    cat_vim
	tag_vim
	cd $BPATH
	echo -e "\nEnter a title for the new blog entry and press [ENTER]: "
	read -r
	echo -e "\nIs '"$REPLY"' correct?"
	read -r -p "[y/n] " answer
		case "$answer" in
    		[yY][eE][sS]|[yY])
				title=$(echo $REPLY | tr " " - | tr A-Z a-z)
        		hugo new post/$title.md
				# add date to filename for easier archiving
				mv $BPATH/content/post/$title.md $BPATH/content/post/$(date +"%Y-%m-%d-%p")"$title".md
				vim -o $BPATH/content/post/$(date +"%Y-%m-%d-%p")"$title".md
				echo ""
				exit
				;;
			*) echo ""
				;;
		esac
}

function just_update_lists {
    cat_vim
	tag_vim
	echo -e "\nCategories and tags lists updated!\n"
}

tasks=0
while (( !tasks )); do
	options=("Write a new Hugo post and update categories and tags lists" "Just Update categories and tags lists" "Quit")
	prompt='Please enter your choice: '
	echo "$prompt"
	select opt in "${options[@]}"; do
		case $REPLY in
			1) new_hugo_post_and_update_lists; break ;;
			2) just_update_lists; break ;;
			3) tasks=1; break ;;
			*) echo "Invalid option, try again!" ;;
		esac
	done
done
# :-)
